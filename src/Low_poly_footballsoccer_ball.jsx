/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 low_poly_footballsoccer_ball.glb 
Author: alex.yefremov (https://sketchfab.com/alex.yefremov)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-footballsoccer-ball-08dc7132f9f742eda7f1f9d36c52219c
Title: Low poly football/soccer ball
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Ball(props) {
  const ballRef = useRef()

  // Constants for our simulation
  const speed = 0.1        // units per second
  const radius = 0.5     // ball radius

  useFrame((state, delta) => {
    if (ballRef.current) {
      // Update the ball's position along the x-axis
      // ballRef.current.position.x += speed * delta

      // Calculate the rotation increment.
      // distance traveled = speed * delta
      // rotation angle = distance / radius
      const rotationIncrement = (speed * delta) / radius

      // Rotate around the z-axis to simulate rolling along the x-axis.
      // The sign of the rotation may be adjusted depending on your scene's orientation.
      ballRef.current.rotation.z -= rotationIncrement
    }
  })

  const { nodes, materials } = useGLTF('/low_poly_footballsoccer_ball.glb')
  return (
    <group {...props} dispose={null} ref={ballRef}>
      <group scale={0.01}>
        <mesh geometry={nodes.pSolid1_lambert2_0.geometry} material={materials.lambert2} />
        <mesh geometry={nodes.pSolid1_lambert3_0.geometry} material={materials.lambert2} />
        <mesh geometry={nodes.pSolid2_lambert1_0.geometry} material={materials.lambert2} />
      </group>
    </group>
  )
}

useGLTF.preload('/low_poly_footballsoccer_ball.glb')
