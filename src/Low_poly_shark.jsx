/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 low_poly_shark.glb 
Author: RiccardoC. (https://sketchfab.com/MaxterDragon1)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-shark-3c99d09f6c884c5fbfdcffb0d451418c
Title: Low Poly Shark
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Shark(props) {
  const sharkRef = useRef();
  const { nodes, materials } = useGLTF('/low_poly_shark.glb')

  useFrame((state) => {
    const elapsed = state.clock.getElapsedTime() + 5

    const rockingAngle = Math.sin(elapsed) * 0.1

    if (sharkRef.current) {
      sharkRef.current.rotation.x = rockingAngle
    }
  })


  return (
    <group {...props} dispose={null} ref={sharkRef}>
      <mesh geometry={nodes.Cylinder002_Material001_0.geometry} material={materials['Material.001']} position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
    </group>
  )
}

useGLTF.preload('/low_poly_shark.glb')
