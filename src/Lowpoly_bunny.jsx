/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 lowpoly_bunny.glb 
Author: gringlas (https://sketchfab.com/gringlas)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/lowpoly-bunny-823a5ab7b1f044e8815f734016f520a2
Title: LowPoly Bunny
*/


import React, { useRef } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

export function Bunny(props) {
  const bunnyRef = useRef();
  const group = React.useRef()
  const { scene, animations } = useGLTF('/lowpoly_bunny.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useFrame((state) => {
    const elapsed = state.clock.getElapsedTime() + 5

    const rockingAngle = Math.sin(elapsed * 2) * -0.08

    if (bunnyRef.current) {
      bunnyRef.current.rotation.y = rockingAngle
    }
  })

  return (
    <group ref={bunnyRef} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Armature_3">
                <group name="GLTF_created_0">
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <group name="Cube_2" />
                  <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials['Material.001']} skeleton={nodes.Object_7.skeleton} />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/lowpoly_bunny.glb')
