/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 dog.glb 
Author: Read1dno (https://sketchfab.com/ef8ser)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/dog-f4ba04c099c543b88353e1f3175b173e
Title: dog
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function Dog(props) {
  const dogRef = useRef();
  const { nodes, materials } = useGLTF('/dog.glb')

  useFrame((state) => {
    const elapsed = state.clock.getElapsedTime() + 5

    const rockingAngle = Math.sin(elapsed * 5) * 0.08

    if (dogRef.current) {
      dogRef.current.rotation.x = rockingAngle
    }
  })

  return (
    <group {...props} dispose={null} ref={dogRef}>
      <group scale={0.01}>
        <mesh geometry={nodes.Plane_Material001_0.geometry} material={materials['Material.001']} position={[0, -6.331, 0]} rotation={[-1.628, Math.PI / 2, 0]} scale={[100, 100, 126.022]} />
      </group>
    </group>
  )
}

useGLTF.preload('/dog.glb')
